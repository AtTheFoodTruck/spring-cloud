server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      # cors 설정
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
              - OPTIONS
              - DELETE
              - PATCH
            allowedHeaders: '*'
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/v1/logins, /user-service/users/v1/join, /user-service/users/v1/owner/join, /user-service/managers/validate, /user-service/managers/status, /user-service/users/v1/validation/**, /user-service/api/v1/info/
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/v1/mypage/**,/user-service/users/v1/logout, /user-service/users/v1/refresh
            - Method=PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_USER, ROLE_MANAGER
        - id: item-service
          uri: lb://ITEM-SERVICE
          predicates:
            - Path=/item-service/items/v1/main, /item-service/items/v1/customer/stores/**, /item-service/items/v1/search/stores
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/item-service/(?<segment>.*), /$\{segment}
        - id: item-service
          uri: lb://ITEM-SERVICE
          predicates:
            - Path=/item-service/items/v1/owner/**, /item-service/items/v1/validation/name
            - Method=GET,PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/item-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_MANAGER
        - id: item-service
          uri: lb://ITEM-SERVICE
          predicates:
            - Path=/item-service/items/v1/customer/**
            - Method=PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/item-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_USER, ROLE_MANAGER
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/orders/v1/**
            - Method=GET,PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_USER, ROLE_MANAGER
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG

jwt:
  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace
