server:
  port: 8000

eureka:
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

# @author:jaemin - route, filter 설정
spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
#      default-filters:
#        filters:
#          - name: LoggingFilter
#            args:
#              baseMessage: Start Logging Filter.
#              preLogger: true
#              postLogger: true
      routes:
        # User Service 시작
        # 로그인, 회원가입, 중복체크
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/logins, /user-service/users/join, /user-service/managers/join, /user-service/validation/**
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # user-service의 모든 요청 filter처리
        # 회원정보 수정, 회원정보 삭제
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/name,/user-service/password,/user-service/mypage,/user-service/users/logout
            - Method=PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_USER, ROLE_MANAGER
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/logout
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # 매니저 서비스
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/managers/**
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_MANAGER
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/**
            - Method=GET,PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_USER
        # User Service 끝
        # Item Service 시작
        - id: item-service
          uri: lb://ITEM-SERVICE
          predicates:
            - Path=/item-service/items/v1/stores/**, /item-service/items/v1/item/**
            - Method=GET,PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/item-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_MANAGER
        # Order Service 시작
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/orders/v1/customer/**
            - Method=GET,PATCH,DELETE,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - name: JwtAuthentication
              args:
                roles: ROLE_USER
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/swagger-ui/, /v2/api-docs, /configuration/**, /swagger*/**, /webjars/**
#            - Method=GET
#          filters:
#            - RemoveRequestHeader=Cookie
##            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # config 서비스
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/actuator/**
#            - Method=GET,POST
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#        # config 서비스
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/health_check
#            - Method=GET
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

# gw process 추적
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG

jwt:
  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK


management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace
